node {
    echo "job name is : ${env.JOB_NAME}"
    echo "Build number is : ${env.BUILD_NUMBER}"
    echo "node name is : ${env.NODE_NAME}"
    echo "Jenkins home dir is : ${env.JENKINS_HOME}"
    
    properties([buildDiscarder(logRotator(artifactDaysToKeepStr: '5', artifactNumToKeepStr: '', daysToKeepStr: '', numToKeepStr: '5')), [$class: 'JobLocalConfiguration', changeReasonComment: ''], pipelineTriggers([pollSCM('* * * * *')])])
      def mavenHome = tool name:"maven3.8.7"
      stage ('CheckoutCode') {
          git branch: 'development', credentialsId: '4ca08094-41d9-42bb-900b-bd8ff1d4b560', url: 'https://github.com/Aricent-jan4devops/maven-web-application.git'
      }
          stage ('Build') {
          //sh "mvn clean package"
            sh "${mavenHome}/bin/mvn clean package"
          }
          /*
           stage ('ExecuteSonarQubeReport') {
              sh "${mavenHome}/bin/mvn clean sonar:sonar"
          }
           stage ('UploadArtifactIntoNexus') {
            sh "${mavenHome}/bin/mvn clean deploy"  
            
           }
           stage ('DeployAppIntoTomCatServer') {
            sshagent(['cbb81b19-276d-4f90-b0de-07c04d54660c']) {
            sh "scp -o StrictHostKeyChecking=no target/maven-web-application.war ec2-user@172.31.33.13:/opt/apache-tomcat-9.0.86/webapps"   
           }
def SendSlackNotifications (String Buildstatus = STARTED) { 
 // Default values
  def colorName = 'RED'

  def colorCode = '#FF0000'

  def subject = "${buildStatus}: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'"

  def summary = "${subject} (${env.BUILD_URL})"
}
if (buildStatus == 'STARTED') {
    colorName = 'YELLOW'

    colorCode = '#FFFF00'

  } else if (buildStatus == 'SUCCESS') {

    col // Override default values based on build status

    colorName = 'GREEN'

    colorCode = '#00FF00'

  } else {

    colorName = 'RED'

    colorCode = '#FF0000'

  }
  // Send notifications
  slackSend (color: colorCode, message: summary, channel: '#hdfcbank')
}
          
              
      }
    */ 
}  
